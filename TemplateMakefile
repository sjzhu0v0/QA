DIR_BASE=/lustre/alice/users/szhu/work/Analysis/PairFlow
PATH_INCLUDE=$(DIR_BASE)/include
FLAGS_INCLUDE=-I$(DIR_BASE)/include -I$(DIR_BASE)/macro
FLAGS_ROOT=$(shell root-config --cflags --libs)
FLAGS_MINUIT=-lMinuit

SRC_DIR := /home/szhu/work/alice/analysis/QA/process/jpsi
SOURCES := $(wildcard $(SRC_DIR)/*.cpp)
TARGETS := $(notdir $(SOURCES:.cpp=.exe))

$(info === Debug info ===)
$(info SOURCES = $(SOURCES))
$(info TARGETS = $(TARGETS))
$(info ================)

.PHONY: all clean print

all: $(TARGETS)
	@echo "Target built: $(TARGETS)"

%.exe: $(SRC_DIR)/%.cpp
	g++ $< -o $@ $(FLAGS_INCLUDE) $(FLAGS_ROOT) $(FLAGS_MINUIT)
	@echo "Compiled: $< -> $@"

clean:
	rm -f *.exe

# macro/event/MultREFRaw.exe: macro/event/MultREFRaw.cpp
# 	g++ -o $@ $^ $(FLAGS_INCLUDE) $(FLAGS_ROOT) $(FLAGS_MINUIT)

# macro/event_jpsi/JpsiAsso.exe: macro/event_jpsi/JpsiAsso.cpp
# 	g++ -o $@ $^ $(FLAGS_INCLUDE) $(FLAGS_ROOT) $(FLAGS_MINUIT) -I./ -L./opt -lMRootDict

# macro/event_jpsi/MixEventReading.exe: macro/event_jpsi/MixEventReading.cpp opt/libMRootDict.so
# 	g++ -o $@ macro/event_jpsi/MixEventReading.cpp $(FLAGS_INCLUDE) $(FLAGS_ROOT) $(FLAGS_MINUIT) -I./ -L./opt -lMRootDict

# opt/MRootDict.cxx: opt/EventData.h opt/LinkDef.h
# 	rootcint -f $@ -c opt/EventData.h opt/LinkDef.h $(FLAGS_INCLUDE)

# opt/libMRootDict.so: opt/MRootDict.cxx opt/EventData.cxx
# 	g++ -o $@ $^ -I./ `root-config --cflags --libs` -shared -fPIC